#!/usr/bin/env Rscript

library(argparse)
library(NanoStringNCTools)
library(GeomxTools)
library(GeoMxWorkflows)
library(readxl)
library(openxlsx)
library(dplyr)

parser <- ArgumentParser(description = "Convert DCC files to a NanoStringGeoMxSet object (.rds)")

parser$add_argument(
	"--team-id",
	required=TRUE,
	help="Team ID"
)
parser$add_argument(
	"--dataset-id",
	required=TRUE,
	help="Dataset ID"
)
parser$add_argument(
	"--slide-id",
	required=TRUE,
	help="Slide ID"
)
parser$add_argument(
	"--sample-metadata",
	required=TRUE,
	help="Path to the QC'ed SAMPLE.csv metadata"
)
parser$add_argument(
	"--dcc-dir",
	required=TRUE,
	help="Path to DCC files directory"
)
parser$add_argument(
	"--pkc-file",
	required=TRUE,
	help="Path to PKC file"
)
parser$add_argument(
	"--annotation-file",
	required=TRUE,
	help="Path to annotation file"
)
parser$add_argument(
	"--output",
	required=TRUE,
	help="Output file name for the NanoStringGeoMxSet object"
)

args <- parser$parse_args()


##########################################
## GENERATE NANOSTRING GEOMX SET OBJECT ##
##########################################
dcc_files <- list.files(path = args$dcc_dir, full.names = TRUE)

# The Sample ID in the annotation file and Sample ID in the FASTQ file name are different (dashes vs. underscores)
original_annotation_file_df <- read_excel(args$annotation_file)
if ("Sample_ID" %in% colnames(original_annotation_file_df)) {
	original_annotation_file_df$Fastq_Sample_ID <- gsub("-", "_", original_annotation_file_df$Sample_ID)
} else {
	stop("Column 'Sample_ID' not found in the dataset.")
}

mod_annotation_file <- "modified_annotation_file.xlsx"
write.xlsx(original_annotation_file_df, mod_annotation_file)
mod_annotation_sheet_name <- getSheetNames(mod_annotation_file)

# Fastq_Sample_ID does not get saved
geomxdata <- readNanoStringGeoMxSet(dccFiles = dcc_files,
									pkcFiles = args$pkc_file,
									phenoDataFile = mod_annotation_file,
									phenoDataSheet = mod_annotation_sheet_name,
									phenoDataDccColName = "Fastq_Sample_ID",
									protocolDataColNames = c("aoi", "roi"),
									experimentDataColNames = c("panel"))

# Add metadata
metadata <- read.csv(args$sample_metadata, header = TRUE, stringsAsFactors = FALSE)
metadata <- metadata[, c("sample_id", "batch", "ASAP_sample_id")]
pData(geomxdata)$team <- args$team_id
pData(geomxdata)$dataset <- args$dataset_id
pData(geomxdata)$slide <- args$slide_id
merged_pdata <- merge(
	pData(geomxdata),
	metadata,
	by.x = "Sample_ID",
	by.y = "sample_id",
	all.x = TRUE,
	sort = FALSE
)
merged_pdata$sample <- merged_pdata$Sample_ID
merged_pdata$batch_id <- paste0(args$team_id, "_", args$dataset_id, "_", merged_pdata$batch)
pData(geomxdata) <- merged_pdata

saveRDS(geomxdata, file = args$output)
